{
    "checksum": "2ee1450f46da856ec4594aa46a4805474473530e28519c365ba4ba105d3e818d",
    "data": {
    "id": "c4d8e479-4721-4dc0-9a21-94519383a813",
    "createdAt": 1758696031488,
    "updatedAt": 1758696035649,
    "title": "TypeScript Error Resolution",
    "messages": [
        {
            "id": "e76eb572-90ac-4201-a8d0-60c7412db3d9",
            "role": "user",
            "content": [
                {
                    "type": "text",
                    "text": "TS2304: Cannot find name Divider"
                }
            ],
            "context": {
                "currentFile": {
                    "path": "client/src/pages/Solutions.tsx",
                    "fsPath": "/Users/samanyu/Desktop/TRINETHRA-DEFENTECH-v3/client/src/pages/Solutions.tsx",
                    "sources": [
                        "opened_tab"
                    ],
                    "content": "import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { Layout } from \"@/components/Layout\";\nimport { motion, useReducedMotion } from \"framer-motion\";\nimport { FaCheck, FaArrowLeft, FaSearch, FaFilter, FaTimes } from \"react-icons/fa\";\nimport { Link, useRoute } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Sheet, SheetContent, SheetDescription, SheetHeader, SheetTitle, SheetTrigger } from \"@/components/ui/sheet\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge as UIBadge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Separator } from \"@/components/ui/separator\";\n\n/**\n * TRINETHRA DEFENTECH — Solutions (Segmented Chips + Compare with Mobile Sheet)\n * - No horizontal scroll; chips auto-wrap.\n * - Quick compare: desktop/tablet = two-up grid; mobile = bottom sheet (same page).\n * - a11y: proper roles/labels, keyboard nav, focus management.\n */\n\n/* ---------------- Types ---------------- */\ninterface Product { name: string; features: string[]; specs: Record<string, string>; }\ninterface SolutionBase {\n    id: string; title: string; description: string; fullDescription: string;\n    mainQuestion: string; mainAnswer: string; certifications: string[];\n    imagePlaceholder: string; features: string[]; applications: string[];\n}\ninterface EdgeAISolution extends SolutionBase { products: Product[] }\ntype Solution = EdgeAISolution | SolutionBase;\nconst isEdgeAISolution = (s: Solution): s is EdgeAISolution =>\n    (s.id === \"server\" || s.id === \"storage-solutions\" || s.id === \"cable-harness\" || s.id === \"panel-pc\") && \"products\" in s;\n\n/* ---------------- Data (same content) ---------------- */\nconst solutionDetails: Record<string, Solution> = {\n    \"cable-harness\": {\n        id: \"cable-harness\",\n        title: \"Cable Harness\",\n        description: \"Rugged interconnect and network distribution assemblies for mission platforms.\",\n        fullDescription:\n            \"Our Cable Harness solutions integrate ruggedized switching and connectivity components, ensuring reliable signal and data distribution across harsh operational environments. Leveraging tactical-grade designs, they deliver resilience against shock, vibration, temperature extremes, and electromagnetic interference.\",\n        mainQuestion: \"Is a Cable Harness solution right for you?\",\n        mainAnswer:\n            \"If your platform requires secure, reliable, and hardened connectivity for sensors, compute nodes, and tactical networks, our Cable Harness solutions ensure sustained performance in demanding missions.\",\n        certifications: [\"MIL-STD-461G\", \"MIL-STD-810G\", \"MIL-STD-1275E\", \"FIPS 140-2\"],\n        imagePlaceholder: \"Cable Harness System\",\n        features: [\n            \"Ruggedized tactical-grade connectivity\",\n            \"Low-loss, EMI-shielded assemblies\",\n            \"Modular harness design for field upgrades\",\n            \"MIL circular & sealed I/O interfaces\",\n            \"Optimized for size, weight & power (SWaP)\",\n        ],\n        applications: [\n            \"Armored & tactical vehicles\",\n            \"Mobile command nodes\",\n            \"Sensor & ISR pod integration\",\n            \"Unmanned platforms wiring systems\",\n        ],\n        products: [\n            {\n                name: \"Tactical XR-7\",\n                features: [\n                    \"Military-grade switch for battlefield communications\",\n                    \"Enhanced Security Protocols\",\n                    \"Military-grade encryption and secure boot capabilities\",\n                    \"Seamlessly integrates with existing defense infrastructure\",\n                    \"Quick setup and configuration for time-critical missions\",\n                ],\n                specs: {\n                    \"Operating Temperature\": \"-40°C to +85°C\",\n                    \"Power Input\": \"9-36V DC with surge protection\",\n                    Encryption: \"AES-256, FIPS 140-2 compliant\",\n                    Ports: \"8x 1G/10G SFP+, 2x 40G QSFP+\",\n                    \"Environmental Rating\": \"IP67, MIL-STD-810G\",\n                },\n            },\n            {\n                name: \"SecureNet Pro\",\n                features: [\n                    \"Encrypted network switch for command centers\",\n                    \"Advanced AES-256 encryption for all traffic\",\n                    \"Integrated intrusion detection and prevention\",\n                    \"Zero-trust network architecture support\",\n                    \"Hardware-based security modules\",\n                ],\n                specs: {\n                    \"Operating Temperature\": \"-40°C to +85°C\",\n                    \"Power Input\": \"9-36V DC with surge protection\",\n                    Encryption: \"AES-256, FIPS 140-2 compliant\",\n                    Ports: \"8x 1G/10G SFP+, 2x 40G QSFP+\",\n                    \"Security Certification\": \"Common Criteria EAL4+\",\n                },\n            },\n            {\n                name: \"FieldOps Switch\",\n                features: [\n                    \"Ruggedized for extreme environmental conditions\",\n                    \"Built to withstand extreme temperatures, shock, and vibration\",\n                    \"EMI/RFI shielding for electromagnetic interference protection\",\n                    \"Dust and waterproof enclosure (IP67 rated)\",\n                    \"Redundant power supplies with hot-swap capability\",\n                ],\n                specs: {\n                    \"Operating Temperature\": \"-40°C to +85°C\",\n                    \"Power Input\": \"9-36V DC with surge protection\",\n                    Protection: \"EMI/EMC MIL-STD-461G compliant\",\n                    \"Vibration/Shock\": \"MIL-STD-810G certified\",\n                    \"Environmental Rating\": \"IP67 waterproof\",\n                },\n            },\n        ],\n    },\n    \"storage-solutions\": {\n        id: \"storage-solutions\",\n        title: \"Storage Solutions\",\n        description: \"Rugged, secure storage platforms for edge and tactical deployments.\",\n        fullDescription:\n            \"Our Storage Solutions portfolio preserves data integrity in contested and extreme environments. With high-capacity removable and encrypted media, these systems enable rapid forensic extraction, long-duration ISR capture, and secure mission playback.\",\n        mainQuestion: \"Do you require mission-resilient storage performance?\",\n        mainAnswer:\n            \"If your operations demand secure, high-capacity, and tamper-resistant data handling across temperature and shock extremes, these systems deliver uncompromising reliability.\",\n        certifications: [\"MIL-STD-461F\", \"MIL-STD-810H\", \"AES-256\", \"FIPS 140\"],\n        imagePlaceholder: \"Rugged Storage\",\n        features: [\n            \"AES-256 hardware encryption\",\n            \"Wide thermal operating range (-40°C to +85°C)\",\n            \"Removable sealed media options\",\n            \"High sustained write throughput\",\n            \"Shock & vibration isolation mounting\",\n        ],\n        applications: [\n            \"ISR & sensor data logging\",\n            \"Secure intelligence retention\",\n            \"Deployable command systems\",\n            \"Mission data exfiltration\",\n        ],\n        products: [\n            {\n                name: \"FORTRESS-X1\",\n                features: [\n                    \"Military-grade encrypted storage solution for mission-critical data\",\n                    \"MIL-STD-810H certified\",\n                    \"AES-256 bit encryption\",\n                    \"Tamper-resistant hardware\",\n                    \"Operational temperature: -40°C to +85°C\",\n                ],\n                specs: {\n                    Certification: \"MIL-STD-810H\",\n                    Encryption: \"AES-256 bit\",\n                    Protection: \"IP68 water and dust resistance\",\n                    Temperature: \"-40°C to +85°C\",\n                    Security: \"Tamper-resistant hardware\",\n                },\n            },\n        ],\n    },\n    server: {\n        id: \"server\",\n        title: \"Server\",\n        description: \"Edge-ready compute platforms optimized for AI inference & secure processing.\",\n        fullDescription:\n            \"Our Server-class edge platforms deliver rugged, SWaP-optimized compute designed for onboard analytics, sensor fusion, and secure mission execution. Built for forward-deployed use where latency, reliability, and survivability matter most.\",\n        mainQuestion: \"Is an Edge Server right for you?\",\n        mainAnswer:\n            \"If you need real-time, on-platform processing with secure, rugged performance without excess complexity, our Server solutions are engineered for you.\",\n        certifications: [\"MIL-STD-810H\", \"DO-160G\", \"MIL-STD-810\"],\n        imagePlaceholder: \"Edge Server\",\n        features: [\n            \"Low-latency AI inference\",\n            \"Ruggedized conduction-cooled design\",\n            \"Military-grade encryption\",\n            \"Offline autonomous operation\",\n            \"Modular I/O expansion\",\n        ],\n        applications: [\n            \"Unmanned system autonomy\",\n            \"On-board sensor fusion\",\n            \"Field ISR analytics\",\n            \"Forward mission planning\",\n        ],\n        products: [\n            {\n                name: \"CAR\",\n                features: [\n                    \"Perfect For Atritable Systems, Combining Small Form Factor With High Performance\",\n                    \"2 TB Fixed Storage Or Up To 512 GB Of Removable CFast Storage\",\n                    \"Modular Linux Based Open Architecture\",\n                    \"Standard: 2x 1 GbE\",\n                    \"GNSS/GPS Receiver (W/ Disable Feature)\",\n                ],\n                specs: {\n                    \"Size / Weight\": \"1.8\\\" H x 4.8\\\" W x 6.8\\\" D\\n2 lbs\",\n                    Speed: \"200 MB/sec\",\n                    Storage: \"2 TB\",\n                    Interfaces: \"2x GbE Audio GPS\",\n                    Security: \"Self Encrypting Drive\",\n                },\n            },\n        ],\n    },\n    \"panel-pc\": {\n        id: \"panel-pc\",\n        title: \"Panel PC\",\n        description: \"Rugged human–machine interface (HMI) terminals for situational control.\",\n        fullDescription:\n            \"Panel PC solutions provide hardened operator interfaces with sunlight-readable displays, sealed touch input, and integrated compute for command, control, and monitoring functions in mobile and fixed defense environments.\",\n        mainQuestion: \"Is a Panel PC right for your operation?\",\n        mainAnswer:\n            \"If you require an integrated, sealed, and mission-resilient interface for operators in harsh environments, a Panel PC enhances usability while maintaining security and durability.\",\n        certifications: [\"MIL-STD-810\", \"IP65\", \"EMI Shielded\"],\n        imagePlaceholder: \"Panel PC\",\n        features: [\n            \"Sunlight-readable display\",\n            \"Sealed touch input\",\n            \"Shock & vibration resistant\",\n            \"Wide temp operating range\",\n            \"Configurable bezel & mounting\",\n        ],\n        applications: [\n            \"Vehicle operator consoles\",\n            \"Shipboard control stations\",\n            \"Industrial/military HMIs\",\n            \"Portable mission control kits\",\n        ],\n        products: [\n            {\n                name: \"Sentinel HMI-12\",\n                features: [\n                    '12\" 1000 nit sunlight-readable LCD (optically bonded)',\n                    \"Glove & moisture compatible capacitive touch\",\n                    \"Wide temp operation -40°C to +70°C\",\n                    \"Sealed IP65 front panel with EMI gasketing\",\n                    \"TPM 2.0 & secure boot enabled firmware\",\n                ],\n                specs: {\n                    Display: '12\" 1000 nit, optical bonding, AR/AG coating',\n                    Resolution: \"1920 x 1080\",\n                    Touch: \"Projected capacitive (glove capable)\",\n                    \"CPU Module\": \"Modular ARM / x86 swappable compute\",\n                    \"I/O\": \"2x GbE, 2x USB 3.0, RS-232/422/485, CAN\",\n                    Storage: \"Removable NVMe (AES-256 options)\",\n                    Power: \"9–36 VDC isolated, surge & reverse protection\",\n                    Environmental: \"MIL-STD-810, IP65 (front), MIL-STD-461 EMI\",\n                    Security: \"TPM 2.0, Secure Boot, Signed FW\",\n                },\n            },\n        ],\n    },\n};\n\n/* ---------------- UI primitives ---------------- */\nconst Badge = ({ children, variant = \"secondary\" }: { children: React.ReactNode; variant?: \"default\" | \"secondary\" | \"destructive\" | \"outline\" }) => (\n    <UIBadge variant={variant} className=\"text-[11px] sm:text-xs font-medium bg-forest/10 text-forest whitespace-nowrap\">\n        {children}\n    </UIBadge>\n);\n\nconst KeyValue = ({ k, v }: { k: string; v: string }) => (\n    <div className=\"py-2 border-b border-gray-200 last:border-0 min-w-0\">\n        <div className=\"font-medium text-navy text-[10px] sm:text-[11px] uppercase tracking-wide mb-0.5\">{k}</div>\n        <div className=\"text-charcoal/80 whitespace-pre-line text-sm\">{v}</div>\n    </div>\n);\n\nconst Section = ({ id, title, children }: { id: string; title?: string; children: React.ReactNode }) => (\n    <section id={id} className=\"scroll-mt-[88px] lg:scroll-mt-[112px] min-w-0\">\n        {title && (\n            <h2 className=\"font-condensed font-bold mb-4 text-navy leading-snug [text-wrap:balance] text-[clamp(1.1rem,3.5vw,1.6rem)]\">\n                {title}\n            </h2>\n        )}\n        {children}\n    </section>\n);\n\n/* ---------------- Enhanced Product Tabs with Better Mobile UX ---------------- */\nfunction ProductTabs({ products }: { products: Product[] }) {\n    const [compareMode, setCompareMode] = useState(false);\n    const [selectedProducts, setSelectedProducts] = useState<number[]>([0]);\n    const [compareSheetOpen, setCompareSheetOpen] = useState(false);\n\n    // viewport helper (sm breakpoint)\n    const [isMobile, setIsMobile] = useState<boolean>(() =>\n        typeof window !== \"undefined\" ? window.matchMedia(\"(max-width: 768px)\").matches : false\n    );\n    \n    useEffect(() => {\n        const mq = window.matchMedia(\"(max-width: 768px)\");\n        const handler = (e: MediaQueryListEvent | MediaQueryList) =>\n            setIsMobile(\"matches\" in e ? (e as MediaQueryListEvent).matches : (e as MediaQueryList).matches);\n        handler(mq);\n        mq.addEventListener?.(\"change\", handler as (e: MediaQueryListEvent) => void);\n        return () => mq.removeEventListener?.(\"change\", handler as (e: MediaQueryListEvent) => void);\n    }, []);\n\n    const handleProductSelect = (index: number) => {\n        if (!compareMode) {\n            setSelectedProducts([index]);\n            return;\n        }\n        \n        setSelectedProducts(prev => {\n            if (prev.includes(index)) {\n                return prev.filter(i => i !== index);\n            } else if (prev.length < 2) {\n                return [...prev, index];\n            } else {\n                return [prev[1], index]; // Replace first with new selection\n            }\n        });\n    };\n\n    const toggleCompareMode = () => {\n        setCompareMode(!compareMode);\n        if (!compareMode) {\n            setSelectedProducts([0]); // Reset to first product when entering compare mode\n        } else {\n            setSelectedProducts([0]); // Reset to single selection when exiting\n        }\n        setCompareSheetOpen(false);\n    };\n\n    const canCompare = compareMode && selectedProducts.length === 2;\n    const primaryProduct = products[selectedProducts[0]];\n    const secondaryProduct = selectedProducts[1] !== undefined ? products[selectedProducts[1]] : null;\n\n    // Enhanced product panel using Card components\n    const ProductPanel = ({ prod, isComparison = false }: { prod: Product; isComparison?: boolean }) => (\n        <Card className=\"h-full\">\n            <CardHeader className=\"pb-4\">\n                <div className=\"flex justify-center items-center bg-gray-50 rounded-lg p-6 mb-4\">\n                    <div className=\"relative w-full max-w-sm\">\n                        <div className=\"aspect-[4/3] bg-navy/5 rounded-lg grid place-items-center\">\n                            <div className=\"w-16 h-16 sm:w-20 sm:h-20 rounded-full bg-navy/10 grid place-items-center\">\n                                <svg className=\"w-8 h-8 sm:w-10 sm:h-10 text-navy\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\">\n                                    <rect x=\"2\" y=\"6\" width=\"20\" height=\"12\" rx=\"2\"/>\n                                </svg>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <CardTitle className=\"text-center text-lg font-condensed font-bold text-navy\">\n                    {prod.name}\n                </CardTitle>\n            </CardHeader>\n            \n            <CardContent className=\"space-y-6\">\n                <div>\n                    <h5 className=\"font-condensed text-forest font-bold mb-3 uppercase text-xs tracking-wide\">Key Features</h5>\n                    <ul className=\"space-y-2\" aria-label=\"Key product features\">\n                        {prod.features.slice(0, isComparison ? 4 : 6).map((f, idx) => (\n                            <li key={idx} className=\"flex items-start text-sm\">\n                                <FaCheck className=\"text-forest mt-1 mr-2 shrink-0 text-xs\" />\n                                <span className=\"text-charcoal/80\">{f}</span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                \n                <Separator />\n                \n                <div>\n                    <h5 className=\"font-condensed text-forest font-bold mb-3 uppercase text-xs tracking-wide\">Specifications</h5>\n                    <div className=\"space-y-3\">\n                        {Object.entries(prod.specs).map(([k, v]) => (\n                            <div key={k} className=\"grid grid-cols-3 gap-2 text-sm\">\n                                <div className=\"font-medium text-navy text-xs uppercase tracking-wide col-span-1\">{k}</div>\n                                <div className=\"text-charcoal/80 whitespace-pre-line col-span-2\">{v}</div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </CardContent>\n        </Card>\n    );\n\n    return (\n        <div className=\"mb-10 md:mb-14\">\n            {/* Header with improved mobile layout */}\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-6\">\n                <h3 className=\"font-semibold text-navy text-xl\">Products</h3>\n                <div className=\"flex items-center gap-3\">\n                    <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={toggleCompareMode}\n                        className={compareMode ? \"bg-forest text-white hover:bg-forest/90\" : \"\"}\n                    >\n                        {compareMode ? \"Exit Compare\" : \"Compare Products\"}\n                    </Button>\n                    {canCompare && (\n                        <Button\n                            variant=\"default\"\n                            size=\"sm\"\n                            onClick={() => setCompareSheetOpen(true)}\n                            className=\"bg-forest hover:bg-forest/90\"\n                        >\n                            View Comparison\n                        </Button>\n                    )}\n                </div>\n            </div>\n\n            {/* Product selection using Tabs for single mode, buttons for compare mode */}\n            {!compareMode ? (\n                <Tabs value={selectedProducts[0].toString()} onValueChange={(value) => handleProductSelect(parseInt(value))}>\n                    <TabsList className=\"grid w-full grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2 h-auto p-1 bg-gray-100\">\n                        {products.map((product, index) => (\n                            <TabsTrigger\n                                key={index}\n                                value={index.toString()}\n                                className=\"data-[state=active]:bg-forest data-[state=active]:text-white text-sm py-3 px-4 rounded-md\"\n                            >\n                                {product.name}\n                            </TabsTrigger>\n                        ))}\n                    </TabsList>\n                    <TabsContent value={selectedProducts[0].toString()} className=\"mt-6\">\n                        <ProductPanel prod={primaryProduct} />\n                    </TabsContent>\n                </Tabs>\n            ) : (\n                <div className=\"space-y-6\">\n                    {/* Compare mode product selection */}\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n                        {products.map((product, index) => {\n                            const isSelected = selectedProducts.includes(index);\n                            return (\n                                <Button\n                                    key={index}\n                                    variant={isSelected ? \"default\" : \"outline\"}\n                                    onClick={() => handleProductSelect(index)}\n                                    className={`h-auto p-4 justify-start ${\n                                        isSelected \n                                            ? \"bg-forest text-white hover:bg-forest/90\" \n                                            : \"hover:bg-gray-50\"\n                                    }`}\n                                    disabled={!isSelected && selectedProducts.length >= 2}\n                                >\n                                    <div className=\"flex items-center gap-3\">\n                                        <div className={`w-4 h-4 rounded-full border-2 ${\n                                            isSelected \n                                                ? \"bg-white border-white\" \n                                                : \"border-gray-300\"\n                                        }`} />\n                                        <span className=\"font-medium\">{product.name}</span>\n                                    </div>\n                                </Button>\n                            );\n                        })}\n                    </div>\n\n                    {/* Selected products preview */}\n                    {selectedProducts.length > 0 && (\n                        <div className=\"bg-gray-50 rounded-lg p-4\">\n                            <h4 className=\"font-medium text-navy mb-2\">\n                                Selected for comparison ({selectedProducts.length}/2):\n                            </h4>\n                            <div className=\"flex flex-wrap gap-2\">\n                                {selectedProducts.map((index) => (\n                                    <Badge key={index} variant=\"default\" className=\"bg-forest text-white\">\n                                        {products[index].name}\n                                        <button\n                                            onClick={() => handleProductSelect(index)}\n                                            className=\"ml-2 hover:bg-white/20 rounded-full p-0.5\"\n                                            aria-label={`Remove ${products[index].name} from comparison`}\n                                        >\n                                            <FaTimes className=\"w-3 h-3\" />\n                                        </button>\n                                    </Badge>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n\n                    {/* Desktop comparison view */}\n                    {canCompare && !isMobile && (\n                        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                            <ProductPanel prod={primaryProduct} isComparison />\n                            <ProductPanel prod={secondaryProduct!} isComparison />\n                        </div>\n                    )}\n                </div>\n            )}\n\n            {/* Mobile comparison sheet */}\n            <Sheet open={compareSheetOpen} onOpenChange={setCompareSheetOpen}>\n                <SheetContent side=\"bottom\" className=\"h-[90vh]\">\n                    <SheetHeader>\n                        <SheetTitle>Product Comparison</SheetTitle>\n                        <SheetDescription>\n                            Compare {primaryProduct.name} and {secondaryProduct?.name}\n                        </SheetDescription>\n                    </SheetHeader>\n                    \n                    {canCompare && (\n                        <div className=\"mt-6\">\n                            <Tabs defaultValue=\"0\" className=\"w-full\">\n                                <TabsList className=\"grid w-full grid-cols-2\">\n                                    <TabsTrigger value=\"0\">{primaryProduct.name}</TabsTrigger>\n                                    <TabsTrigger value=\"1\">{secondaryProduct!.name}</TabsTrigger>\n                                </TabsList>\n                                <TabsContent value=\"0\" className=\"mt-4\">\n                                    <ProductPanel prod={primaryProduct} isComparison />\n                                </TabsContent>\n                                <TabsContent value=\"1\" className=\"mt-4\">\n                                    <ProductPanel prod={secondaryProduct!} isComparison />\n                                </TabsContent>\n                            </Tabs>\n                        </div>\n                    )}\n                </SheetContent>\n            </Sheet>\n        </div>\n    );\n}\n\n/* ---------------- Sticky TOC ---------------- */\nfunction StickyTOC({ sections }: { sections: { id: string; label: string }[] }) {\n    const [active, setActive] = useState(sections[0]?.id);\n    useEffect(() => {\n        const obs = new IntersectionObserver(\n            (es) => es.forEach((e) => e.isIntersecting && setActive(e.target.id)),\n            { rootMargin: \"-60% 0px -35% 0px\", threshold: [0, 1] }\n        );\n        sections.forEach((s) => { const el = document.getElementById(s.id); if (el) obs.observe(el); });\n        return () => obs.disconnect();\n    }, [sections]);\n\n    return (\n        <nav aria-label=\"On this page\" className=\"hidden lg:block lg:sticky lg:top-28\">\n            <ul className=\"space-y-1\">\n                {sections.map((s) => (\n                    <li key={s.id}>\n                        <a\n                            href={`#${s.id}`}\n                            aria-current={active === s.id ? \"true\" : undefined}\n                            onClick={(e) => { e.preventDefault(); document.getElementById(s.id)?.scrollIntoView({ behavior: \"smooth\", block: \"start\" }); }}\n                            className={`block text-sm px-3 py-2 rounded-md transition-colors ${active === s.id ? \"bg-forest/10 text-forest\" : \"text-gray-700 hover:bg-gray-100\"}`}\n                        >\n                            {s.label}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n}\n\n/* ---------------- Solution Detail ---------------- */\nfunction SolutionDetail() {\n    const [, params] = useRoute(\"/solutions/:solutionId\");\n    const reduce = useReducedMotion();\n    const legacy: Record<string, string> = { \"edge-ai\": \"server\", \"data-storage\": \"storage-solutions\", switches: \"cable-harness\" };\n    const rawId = params?.solutionId as string | undefined;\n    const mappedId = rawId && legacy[rawId] ? legacy[rawId] : rawId;\n    const solution = mappedId ? solutionDetails[mappedId] : undefined;\n\n    if (!solution) {\n        return (\n            <Layout>\n                <div className=\"py-20 px-4\">\n                    <h1 className=\"text-[clamp(1.4rem,4vw,2rem)] font-bold mb-6 text-forest\">Solution not found</h1>\n                    <Link href=\"/solutions\" className=\"text-teal hover:text-teal/80 inline-flex items-center font-medium\">\n                        <FaArrowLeft className=\"mr-2\" /> Back to All Solutions\n                    </Link>\n                </div>\n            </Layout>\n        );\n    }\n\n    const fade = {\n        hidden: { opacity: 0, y: reduce ? 0 : 16 },\n        visible: { opacity: 1, y: 0, transition: { duration: 0.5, ease: \"easeOut\" } },\n    } as const;\n\n    const toc = useMemo(\n        () => [\n            { id: \"overview\", label: \"Overview\" },\n            { id: \"features\", label: \"Key Features\" },\n            { id: \"applications\", label: \"Applications\" },\n            ...(isEdgeAISolution(solution) ? [{ id: \"products\", label: \"Products\" }, { id: \"product-details\", label: \"Product Details\" }] : []),\n        ],\n        [solution]\n    );\n\n    const schema = {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Product\",\n        name: solution.title,\n        description: solution.fullDescription,\n        brand: { \"@type\": \"Brand\", name: \"TRINETHRA DEFENTECH\" },\n        category: \"Defense Technology\",\n        manufacturer: { \"@type\": \"Organization\", name: \"TRINETHRA DEFENTECH\" },\n        offers: { \"@type\": \"Offer\", url: \"https://trinethra-defentech.com/contact\", availability: \"https://schema.org/InStock\" },\n        additionalProperty: solution.features.map((value) => ({ \"@type\": \"PropertyValue\", name: \"Feature\", value })),\n    };\n\n    return (\n        <Layout\n            title={`${solution.title} | TRINETHRA DEFENTECH Advanced Defense Technology`}\n            description={`${solution.fullDescription.substring(0, 150)}... Engineered for mission-critical defense and security operations.`}\n            keywords={`${solution.title}, TRINETHRA DEFENTECH, ${solution.certifications.join(\", \")}, defense technology, military-grade solutions`}\n            ogType=\"product\"\n            structuredData={JSON.stringify(schema)}\n            pageType=\"solution\"\n            solutionName={solution.title}\n            solutionCategory=\"Defense Technology\"\n        >\n            <section className=\"bg-gray-50 pt-20 sm:pt-24 lg:pt-28 pb-12 sm:pb-16 lg:pb-20\" aria-labelledby=\"solution-heading\">\n                <div className=\"px-4 sm:px-6 md:px-8\">\n                    <div className=\"max-w-6xl mx-auto min-w-0\">\n                        {/* Breadcrumbs */}\n                        <div className=\"mb-4 sm:mb-6\" aria-label=\"Breadcrumb\">\n                            <ol className=\"flex items-center text-sm text-gray-600 gap-2 flex-wrap\">\n                                <li><Link href=\"/\" className=\"hover:underline\">Home</Link></li>\n                                <li aria-hidden>›</li>\n                                <li><Link href=\"/solutions\" className=\"hover:underline\">Solutions</Link></li>\n                                <li aria-hidden>›</li>\n                                <li aria-current=\"page\" className=\"text-gray-900 font-medium\">{solution.title}</li>\n                            </ol>\n                        </div>\n\n                        {/* Top layout */}\n                        <div className=\"grid grid-cols-1 lg:grid-cols-[minmax(0,1fr)_minmax(260px,300px)] gap-10 min-w-0\">\n                            <div className=\"min-w-0\">\n                                <div id=\"overview\" className=\"scroll-mt-[88px] lg:scroll-mt-[112px] mb-8 sm:mb-10\">\n                                    <motion.h1\n                                        id=\"solution-heading\"\n                                        initial=\"hidden\" whileInView=\"visible\" viewport={{ once: true, amount: 0.25 }} variants={fade}\n                                        className=\"font-condensed font-bold text-forest border-l-4 border-forest pl-4 mb-3 sm:mb-4 leading-tight [text-wrap:balance] text-[clamp(1.6rem,6vw,2.6rem)]\"\n                                    >\n                                        {solution.title}\n                                    </motion.h1>\n\n                                    <div className=\"flex flex-wrap gap-2 mb-4 sm:mb-5\">\n                                        {solution.certifications.map((c, i) => <Badge key={i}>{c}</Badge>)}\n                                    </div>\n\n                                    <motion.p\n                                        initial=\"hidden\" whileInView=\"visible\" viewport={{ once: true, amount: 0.25 }} variants={fade}\n                                        className=\"text-[clamp(1rem,2.5vw,1.125rem)] max-w-3xl text-charcoal/80 [text-wrap:pretty]\"\n                                    >\n                                        {solution.fullDescription}\n                                    </motion.p>\n                                </div>\n\n                                <Divider />\n\n                                <Section id=\"features\" title=\"Key Features\">\n                                    <ul className=\"space-y-3 mb-8 text-charcoal/80\">\n                                        {solution.features.map((f, idx) => (\n                                            <li key={idx} className=\"flex items-start text-[clamp(0.95rem,2.4vw,1.05rem)]\">\n                                                <FaCheck className=\"text-forest mt-1 mr-2 shrink-0\" />\n                                                <span className=\"[text-wrap:pretty]\">{f}</span>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </Section>\n\n                                <Section id=\"applications\" title=\"Applications\">\n                                    <ul className=\"space-y-3 mb-6 text-charcoal/80\">\n                                        {solution.applications.map((a, idx) => (\n                                            <li key={idx} className=\"flex items-start text-[clamp(0.95rem,2.4vw,1.05rem)]\">\n                                                <svg className=\"h-5 w-5 text-teal mr-2 mt-0.5 shrink-0\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" aria-hidden=\"true\">\n                                                    <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\" />\n                                                    <polyline points=\"22 4 12 14.01 9 11.01\" />\n                                                </svg>\n                                                <span className=\"[text-wrap:pretty]\">{a}</span>\n                                            </li>\n                                        ))}\n                                    </ul>\n                                </Section>\n\n                                {isEdgeAISolution(solution) && (\n                                    <Section id=\"products\" title=\"Products\">\n                                        <ProductTabs products={solution.products} />\n                                    </Section>\n                                )}\n\n                                <motion.div\n                                    initial=\"hidden\" whileInView=\"visible\" viewport={{ once: true, amount: 0.25 }} variants={fade}\n                                    className=\"mt-12\"\n                                >\n                                    <Card className=\"bg-[#0D4114] text-cream border-0 shadow-lg\">\n                                        <CardContent className=\"p-6 sm:p-8\">\n                                            <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between gap-6\">\n                                                <div className=\"min-w-0\">\n                                                    <CardTitle className=\"text-xl lg:text-2xl font-bold mb-2 text-cream\">\n                                                        Ready to implement this solution?\n                                                    </CardTitle>\n                                                    <CardDescription className=\"text-sm md:text-base mb-0 text-cream/90\">\n                                                        Our specialists can help you deploy a customized version for your specific needs.\n                                                    </CardDescription>\n                                                </div>\n                                                <Button asChild size=\"lg\" className=\"bg-teal hover:bg-teal/90 text-white shrink-0\">\n                                                    <Link href=\"/contact\">\n                                                        Request Consultation\n                                                    </Link>\n                                                </Button>\n                                            </div>\n                                        </CardContent>\n                                    </Card>\n                                </motion.div>\n                            </div>\n\n                            {/* Right rail */}\n                            <aside className=\"w-full order-first lg:order-none min-w-0\">\n                                <StickyTOC sections={toc} />\n                                <Card className=\"mt-6 sticky top-28\">\n                                    <CardHeader>\n                                        <div className=\"h-16 w-16 rounded-full bg-forest/10 flex items-center justify-center mb-4\">\n                                            <svg className=\"h-8 w-8 text-forest\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" aria-hidden=\"true\">\n                                                <rect x=\"3\" y=\"4\" width=\"18\" height=\"14\" rx=\"2\" />\n                                            </svg>\n                                        </div>\n                                        <CardTitle className=\"text-xl font-bold text-navy\">{solution.title}</CardTitle>\n                                        <CardDescription className=\"text-sm sm:text-base text-charcoal/80\">\n                                            {solution.description}\n                                        </CardDescription>\n                                    </CardHeader>\n                                    <CardContent>\n                                        <div className=\"flex flex-wrap gap-2\">\n                                            {solution.certifications.map((c, i) => (\n                                                <Badge key={i} variant=\"secondary\">{c}</Badge>\n                                            ))}\n                                        </div>\n                                    </CardContent>\n                                </Card>\n                            </aside>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Layout>\n    );\n}\n\n/* ---------------- Solution List ---------------- */\nfunction SolutionList() {\n    const base = useMemo(\n        () =>\n            Object.values(solutionDetails).map((s) => ({\n                id: s.id, title: s.title, description: s.description,\n                fullDescription: s.fullDescription.length > 180 ? s.fullDescription.substring(0, 180) + \"...\" : s.fullDescription,\n                certifications: s.certifications, imagePlaceholder: s.imagePlaceholder, features: s.features.slice(0, 4),\n            })),\n        []\n    );\n\n    // New: category mapping for redesigned filters\n    const categoryMap: Record<string, string> = {\n        server: \"Edge Compute\",\n        \"storage-solutions\": \"Storage\",\n        \"cable-harness\": \"Connectivity\",\n        \"panel-pc\": \"HMI / Operator\",\n    };\n\n    const categories = Array.from(\n        new Set(Object.values(base).map((b) => categoryMap[b.id] || \"Other\"))\n    );\n\n    const [query, setQuery] = useState(\"\");\n    const [activeCats, setActiveCats] = useState<Set<string>>(new Set());\n    const [view, setView] = useState<\"grid\" | \"list\">(\"grid\");\n\n    const toggleCategory = (c: string) => {\n        setActiveCats((prev) => {\n            const next = new Set(prev);\n            if (next.has(c)) next.delete(c); else next.add(c);\n            return next;\n        });\n    };\n    const clearFilters = () => setActiveCats(new Set());\n\n    const q = query.trim().toLowerCase();\n    const filtered = useMemo(() => {\n        let items = base;\n        if (activeCats.size) {\n            items = items.filter((p) => activeCats.has(categoryMap[p.id] || \"Other\"));\n        }\n        if (!q) return items;\n        return items.filter((p) => {\n            const hay = [p.title, p.description, p.fullDescription, ...p.features, ...p.certifications].join(\" \").toLowerCase();\n            return hay.includes(q);\n        });\n    }, [q, base, activeCats]);\n\n    const results = filtered;\n\n    const schema = {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"ItemList\",\n        name: \"TRINETHRA DEFENTECH Defense Technology Solutions\",\n        description:\n            \"Our portfolio of advanced, rugged, and secure defense technology solutions designed for the most demanding defense and national security applications.\",\n        itemListElement: base.map((p, index) => ({\n            \"@type\": \"ListItem\",\n            position: index + 1,\n            item: { \"@type\": \"Product\", name: p.title, description: p.description, url: `https://trinethra-defentech.com/solutions/${p.id}`, category: \"Defense Technology\" },\n        })),\n    };\n\n    const getIcon = (id: string) => (\n        <svg className=\"w-10 h-10 sm:w-12 sm:h-12 text-navy\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" aria-hidden=\"true\">\n            <rect x=\"3\" y=\"4\" width=\"18\" height=\"14\" rx=\"2\" />\n        </svg>\n    );\n\n    // Accessible label helpers\n    const resultsLabel = `${results.length} solution${results.length === 1 ? \"\" : \"s\"}`;\n\n    return (\n        <Layout\n            title=\"Advanced Defense Solutions | TRINETHRA DEFENTECH\"\n            description=\"Explore our portfolio of mission-grade technology solutions including Edge Servers, Storage Solutions, Cable Harness Systems, and Rugged Panel PCs engineered for deployed environments.\"\n            keywords=\"defense solutions, rugged server, storage solutions, cable harness, panel pc, TRINETHRA DEFENTECH, edge compute, tactical systems, defense-grade hardware\"\n            ogType=\"website\"\n            structuredData={JSON.stringify(schema)}\n            pageType=\"solutions\"\n        >\n            {/* Redesigned Hero */}\n            <section className=\"relative overflow-hidden bg-gradient-to-b from-[#0D4114] via-[#0D4114] to-[#06220A] py-20 sm:py-24 lg:py-32 px-4 sm:px-6\">\n                <div className=\"absolute inset-0 pointer-events-none opacity-[0.12] bg-[radial-gradient(circle_at_30%_30%,#16a34a_0%,transparent_60%)]\" aria-hidden />\n                <div className=\"max-w-6xl mx-auto text-center relative\">\n                    <motion.h1\n                        className=\"text-[clamp(1.75rem,6vw,3rem)] font-condensed font-bold mb-5 text-cream tracking-tight\"\n                        initial={{ opacity: 0, y: 18 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.65 }}\n                    >\n                        Mission-Grade Technology Solutions\n                    </motion.h1>\n                    <motion.p\n                        className=\"text-[clamp(1rem,2.4vw,1.25rem)] text-cream/85 max-w-3xl mx-auto mb-8 sm:mb-10 [text-wrap:pretty]\"\n                        initial={{ opacity: 0, y: 18 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.65, delay: 0.15 }}\n                    >\n                        Rugged edge compute, secure storage, resilient connectivity and hardened operator interfaces engineered for deployed defense environments.\n                    </motion.p>\n                    <motion.div\n                        initial={{ opacity: 0, y: 18 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.65, delay: 0.25 }}\n                        className=\"flex flex-wrap justify-center gap-2\"\n                    >\n                        {[\"MIL-STD-810\", \"AES-256\", \"FIPS 140-2\", \"MIL-STD-461\"].map((c, i) => <Badge key={i}>{c}</Badge>)}\n                    </motion.div>\n                </div>\n            </section>\n\n            {/* Filters + Results */}\n            <section className=\"bg-white py-10 sm:py-16 lg:py-20 px-4 sm:px-6\">\n                <div className=\"max-w-7xl mx-auto\">\n                    {/* Mobile Filters Sheet */}\n                    <div className=\"lg:hidden mb-6\">\n                        <div className=\"flex gap-3 mb-4\">\n                            <div className=\"relative flex-1\">\n                                <FaSearch className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n                                <input\n                                    type=\"search\"\n                                    value={query}\n                                    onChange={(e) => setQuery(e.target.value)}\n                                    placeholder=\"Search solutions...\"\n                                    className=\"w-full pl-9 pr-3 py-2.5 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-forest focus:border-transparent text-sm\"\n                                    aria-label=\"Search solutions\"\n                                />\n                            </div>\n                            <Sheet>\n                                <SheetTrigger asChild>\n                                    <Button variant=\"outline\" size=\"sm\" className=\"shrink-0\">\n                                        <FaFilter className=\"w-4 h-4 mr-2\" />\n                                        Filters\n                                        {activeCats.size > 0 && (\n                                            <Badge variant=\"secondary\" className=\"ml-2 bg-forest text-white\">\n                                                {activeCats.size}\n                                            </Badge>\n                                        )}\n                                    </Button>\n                                </SheetTrigger>\n                                <SheetContent side=\"right\" className=\"w-80\">\n                                    <SheetHeader>\n                                        <SheetTitle>Filter Solutions</SheetTitle>\n                                        <SheetDescription>\n                                            Narrow down solutions by category\n                                        </SheetDescription>\n                                    </SheetHeader>\n                                    <div className=\"mt-6 space-y-6\">\n                                        <div>\n                                            <h3 className=\"text-sm font-semibold text-navy mb-3 uppercase tracking-wide\">Categories</h3>\n                                            <div className=\"space-y-2\">\n                                                {categories.map((c) => {\n                                                    const active = activeCats.has(c);\n                                                    return (\n                                                        <Button\n                                                            key={c}\n                                                            variant={active ? \"default\" : \"outline\"}\n                                                            size=\"sm\"\n                                                            onClick={() => toggleCategory(c)}\n                                                            className={`w-full justify-start ${\n                                                                active ? \"bg-forest text-white hover:bg-forest/90\" : \"\"\n                                                            }`}\n                                                        >\n                                                            {c}\n                                                        </Button>\n                                                    );\n                                                })}\n                                            </div>\n                                            {activeCats.size > 0 && (\n                                                <Button\n                                                    variant=\"ghost\"\n                                                    size=\"sm\"\n                                                    onClick={clearFilters}\n                                                    className=\"w-full mt-3 text-red-600 hover:text-red-700 hover:bg-red-50\"\n                                                >\n                                                    Clear all filters\n                                                </Button>\n                                            )}\n                                        </div>\n                                        <Card className=\"p-4\">\n                                            <CardContent className=\"p-0\">\n                                                <p className=\"text-sm text-gray-600\">\n                                                    <strong>Tip:</strong> Combine category filters with keyword search to quickly find specific solutions.\n                                                </p>\n                                            </CardContent>\n                                        </Card>\n                                    </div>\n                                </SheetContent>\n                            </Sheet>\n                        </div>\n                    </div>\n\n                    <div className=\"grid grid-cols-1 lg:grid-cols-[280px_minmax(0,1fr)] gap-10\">\n                        {/* Desktop Sidebar Filters */}\n                        <aside className=\"hidden lg:block\">\n                            <Card className=\"sticky top-24\">\n                                <CardHeader>\n                                    <CardTitle className=\"text-lg\">Filter Solutions</CardTitle>\n                                </CardHeader>\n                                <CardContent className=\"space-y-6\">\n                                    <div>\n                                        <h3 className=\"text-sm font-semibold text-navy mb-3 uppercase tracking-wide\">Search</h3>\n                                        <div className=\"relative\">\n                                            <FaSearch className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-400\" />\n                                            <input\n                                                type=\"search\"\n                                                value={query}\n                                                onChange={(e) => setQuery(e.target.value)}\n                                                placeholder=\"Search solutions...\"\n                                                className=\"w-full pl-9 pr-3 py-2.5 rounded-md border border-gray-300 focus:outline-none focus:ring-2 focus:ring-forest focus:border-transparent text-sm\"\n                                                aria-label=\"Search solutions\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <Separator />\n                                    <div>\n                                        <h3 className=\"text-sm font-semibold text-navy mb-3 uppercase tracking-wide\">Categories</h3>\n                                        <div className=\"space-y-2\">\n                                            {categories.map((c) => {\n                                                const active = activeCats.has(c);\n                                                return (\n                                                    <Button\n                                                        key={c}\n                                                        variant={active ? \"default\" : \"outline\"}\n                                                        size=\"sm\"\n                                                        onClick={() => toggleCategory(c)}\n                                                        className={`w-full justify-start ${\n                                                            active ? \"bg-forest text-white hover:bg-forest/90\" : \"\"\n                                                        }`}\n                                                    >\n                                                        {c}\n                                                    </Button>\n                                                );\n                                            })}\n                                        </div>\n                                        {activeCats.size > 0 && (\n                                            <Button\n                                                variant=\"ghost\"\n                                                size=\"sm\"\n                                                onClick={clearFilters}\n                                                className=\"w-full mt-3 text-red-600 hover:text-red-700 hover:bg-red-50\"\n                                            >\n                                                Clear all filters\n                                            </Button>\n                                        )}\n                                    </div>\n                                    <Separator />\n                                    <div className=\"bg-gray-50 rounded-md p-3 text-sm\">\n                                        <p className=\"font-medium text-navy mb-2\">How to use</p>\n                                        <p className=\"text-gray-600 text-xs leading-relaxed\">\n                                            Combine category filters with keyword search to quickly narrow down solutions.\n                                        </p>\n                                    </div>\n                                </CardContent>\n                            </Card>\n                        </aside>\n\n                        {/* Main content */}\n                        <div className=\"min-w-0\">\n\n                        {/* Header Row */}\n                        <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-8\">\n                            <div>\n                                <h2 className=\"text-[clamp(1.4rem,4vw,2.2rem)] font-condensed font-bold text-navy leading-tight mb-2\">\n                                    Our Defense Technology Solutions\n                                </h2>\n                                <p className=\"text-sm text-charcoal/70\">{resultsLabel}{activeCats.size ? ` • Filtered` : \"\"}{q ? ` • Matching '${query}'` : \"\"}</p>\n                            </div>\n                            <div className=\"flex items-center gap-3 self-start sm:self-auto\">\n                                <div className=\"inline-flex rounded-md border border-gray-300 overflow-hidden\" role=\"group\" aria-label=\"Change results view\">\n                                    <button\n                                        onClick={() => setView(\"grid\")}\n                                        className={`px-3 py-2 text-xs font-medium tracking-wide ${view === \"grid\" ? \"bg-forest text-white\" : \"bg-white text-gray-700 hover:bg-gray-100\"}`}\n                                        aria-pressed={view === \"grid\"}\n                                    >Grid</button>\n                                    <button\n                                        onClick={() => setView(\"list\")}\n                                        className={`px-3 py-2 text-xs font-medium tracking-wide border-l border-gray-300 ${view === \"list\" ? \"bg-forest text-white\" : \"bg-white text-gray-700 hover:bg-gray-100\"}`}\n                                        aria-pressed={view === \"list\"}\n                                    >List</button>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Empty State */}\n                        {results.length === 0 && (\n                            <div className=\"text-center bg-gray-50 border border-gray-200 rounded-lg p-10\">\n                                <p className=\"text-navy font-medium mb-2\">No matching solutions</p>\n                                <p className=\"text-sm text-charcoal/70 mb-6 max-w-md mx-auto\">Try different keywords or remove some category filters to broaden the results.</p>\n                                {activeCats.size > 0 || q ? (\n                                    <button onClick={() => { clearFilters(); setQuery(\"\"); }} className=\"bg-forest text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-forest/90\">Reset Search</button>\n                                ) : null}\n                            </div>\n                        )}\n\n                        {/* Grid Results */}\n                        {results.length > 0 && view === \"grid\" && (\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\">\n                                {results.map((p, i) => (\n                                    <motion.div\n                                        key={p.id}\n                                        initial={{ opacity: 0, y: 24 }} \n                                        whileInView={{ opacity: 1, y: 0 }} \n                                        viewport={{ once: true, amount: 0.2 }} \n                                        transition={{ duration: 0.55, delay: i * 0.05 }}\n                                    >\n                                        <Card className=\"group h-full hover:shadow-lg transition-all duration-300 hover:-translate-y-1\">\n                                            <CardHeader className=\"pb-4\">\n                                                <div className=\"aspect-[16/9] mb-4 rounded-lg bg-gradient-to-br from-gray-50 to-gray-100 grid place-items-center relative overflow-hidden\">\n                                                    <div className=\"w-16 h-16 rounded-full bg-forest/10 flex items-center justify-center\">\n                                                        {getIcon(p.id)}\n                                                    </div>\n                                                    <div className=\"absolute inset-0 opacity-0 group-hover:opacity-100 transition-opacity bg-[radial-gradient(circle_at_70%_30%,rgba(13,65,20,0.08),transparent_70%)]\" aria-hidden />\n                                                </div>\n                                                <CardTitle className=\"text-lg font-condensed font-bold text-navy leading-tight\">\n                                                    <Link \n                                                        href={`/solutions/${p.id}`} \n                                                        className=\"hover:underline focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-forest rounded-sm\"\n                                                    >\n                                                        {p.title}\n                                                    </Link>\n                                                </CardTitle>\n                                                <CardDescription className=\"text-sm text-charcoal/75 line-clamp-2\">\n                                                    {p.description}\n                                                </CardDescription>\n                                            </CardHeader>\n                                            \n                                            <CardContent className=\"flex-grow\">\n                                                <ul className=\"space-y-2 text-sm text-charcoal/80\">\n                                                    {p.features.map((f, idx) => (\n                                                        <li key={idx} className=\"flex items-start gap-2\">\n                                                            <FaCheck className=\"text-forest mt-0.5 shrink-0 text-xs\" />\n                                                            <span className=\"line-clamp-1\">{f}</span>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </CardContent>\n                                            \n                                            <CardFooter className=\"pt-4 flex items-center justify-between gap-4\">\n                                                <div className=\"flex flex-wrap gap-1.5\">\n                                                    {p.certifications.slice(0, 2).map((c, j) => (\n                                                        <Badge key={j} variant=\"secondary\">{c}</Badge>\n                                                    ))}\n                                                    {p.certifications.length > 2 && (\n                                                        <Badge variant=\"outline\" className=\"text-xs\">\n                                                            +{p.certifications.length - 2}\n                                                        </Badge>\n                                                    )}\n                                                </div>\n                                                <Button asChild size=\"sm\" className=\"bg-forest hover:bg-forest/90\">\n                                                    <Link href={`/solutions/${p.id}`}>\n                                                        Explore\n                                                    </Link>\n                                                </Button>\n                                            </CardFooter>\n                                        </Card>\n                                    </motion.div>\n                                ))}\n                            </div>\n                        )}\n\n                        {/* List Results */}\n                        {results.length > 0 && view === \"list\" && (\n                            <div className=\"space-y-6\">\n                                {results.map((p, i) => (\n                                    <motion.div\n                                        key={p.id}\n                                        initial={{ opacity: 0, y: 20 }} \n                                        whileInView={{ opacity: 1, y: 0 }} \n                                        viewport={{ once: true, amount: 0.2 }} \n                                        transition={{ duration: 0.5, delay: i * 0.04 }}\n                                    >\n                                        <Card className=\"hover:shadow-md transition-shadow\">\n                                            <CardContent className=\"p-6 md:p-8\">\n                                                <div className=\"flex flex-col md:flex-row gap-6 md:gap-8\">\n                                                    {/* Left side - Image and badges */}\n                                                    <div className=\"md:w-48 shrink-0\">\n                                                        <div className=\"aspect-square rounded-lg bg-gradient-to-br from-gray-50 to-gray-100 grid place-items-center mb-4\">\n                                                            <div className=\"w-16 h-16 rounded-full bg-forest/10 flex items-center justify-center\">\n                                                                {getIcon(p.id)}\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"flex flex-wrap gap-1.5\">\n                                                            {p.certifications.slice(0, 3).map((c, j) => (\n                                                                <Badge key={j} variant=\"secondary\">{c}</Badge>\n                                                            ))}\n                                                            {p.certifications.length > 3 && (\n                                                                <Badge variant=\"outline\" className=\"text-xs\">\n                                                                    +{p.certifications.length - 3}\n                                                                </Badge>\n                                                            )}\n                                                        </div>\n                                                    </div>\n                                                    \n                                                    {/* Right side - Content */}\n                                                    <div className=\"flex-grow min-w-0\">\n                                                        <div className=\"flex flex-col md:flex-row md:items-start justify-between gap-4 mb-4\">\n                                                            <div>\n                                                                <CardTitle className=\"text-xl font-condensed font-bold text-navy leading-tight mb-2\">\n                                                                    <Link \n                                                                        href={`/solutions/${p.id}`} \n                                                                        className=\"hover:underline focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-forest rounded-sm\"\n                                                                    >\n                                                                        {p.title}\n                                                                    </Link>\n                                                                </CardTitle>\n                                                                <CardDescription className=\"text-sm md:text-base text-charcoal/80 max-w-3xl\">\n                                                                    {p.fullDescription}\n                                                                </CardDescription>\n                                                            </div>\n                                                            <Button asChild className=\"bg-forest hover:bg-forest/90 shrink-0\">\n                                                                <Link href={`/solutions/${p.id}`}>\n                                                                    View Details\n                                                                </Link>\n                                                            </Button>\n                                                        </div>\n                                                        \n                                                        <Separator className=\"my-4\" />\n                                                        \n                                                        <div>\n                                                            <h4 className=\"font-medium text-navy mb-3 text-sm uppercase tracking-wide\">Key Features</h4>\n                                                            <ul className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-2 text-sm text-charcoal/85\">\n                                                                {p.features.map((f, idx) => (\n                                                                    <li key={idx} className=\"flex items-start gap-2\">\n                                                                        <FaCheck className=\"text-forest mt-0.5 shrink-0 text-xs\" />\n                                                                        <span>{f}</span>\n                                                                    </li>\n                                                                ))}\n                                                            </ul>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </CardContent>\n                                        </Card>\n                                    </motion.div>\n                                ))}\n                            </div>\n                        )}\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            {/* Enhanced CTA Section */}\n            <section className=\"bg-gray-50 py-12 sm:py-16 lg:py-20 px-4 sm:px-6\">\n                <div className=\"max-w-6xl mx-auto\">\n                    <motion.div\n                        initial={{ opacity: 0, y: 18 }} \n                        whileInView={{ opacity: 1, y: 0 }} \n                        viewport={{ once: true, amount: 0.25 }} \n                        transition={{ duration: 0.6 }}\n                    >\n                        <Card className=\"bg-white shadow-lg border-0\">\n                            <CardContent className=\"p-8 lg:p-12\">\n                                <div className=\"flex flex-col lg:flex-row lg:items-center gap-8 lg:gap-14\">\n                                    <div className=\"lg:w-2/3 min-w-0\">\n                                        <CardTitle className=\"text-2xl lg:text-3xl font-bold mb-4 text-navy leading-tight\">\n                                            Need a Custom Defense Solution?\n                                        </CardTitle>\n                                        <CardDescription className=\"text-base text-charcoal/80 mb-0\">\n                                            Our engineers can help tailor rugged compute, storage, interconnect, or HMI platforms to your mission profile, environmental constraints, and accreditation requirements.\n                                        </CardDescription>\n                                    </div>\n                                    <div className=\"lg:w-1/3 flex justify-center lg:justify-end\">\n                                        <Button asChild size=\"lg\" className=\"bg-navy hover:bg-navy/90 w-full lg:w-auto\">\n                                            <Link href=\"/contact\">\n                                                Contact Our Team\n                                            </Link>\n                                        </Button>\n                                    </div>\n                                </div>\n                            </CardContent>\n                        </Card>\n                    </motion.div>\n                </div>\n            </section>\n        </Layout>\n    );\n}\n\n/* ---------------- Router ---------------- */\nexport default function Solutions() {\n    const [match] = useRoute(\"/solutions/:solutionId\");\n    return match ? <SolutionDetail /> : <SolutionList />;\n}\n",
                    "language": "typescript jsx"
                },
                "codebaseEnabled": true,
                "usedRules": [
                    "zen-rules://repo/.zencoder/rules/repo.md"
                ]
            },
            "createdAt": 1758696031491,
            "isInternal": false,
            "rawContent": {
                "type": "doc",
                "content": [
                    {
                        "type": "paragraph",
                        "content": [
                            {
                                "type": "text",
                                "text": "TS2304: Cannot find name Divider"
                            }
                        ]
                    }
                ]
            },
            "autoAppliedRules": [
                {
                    "name": "Repository Information Overview",
                    "description": "Repository Information Overview",
                    "uri": "zen-rules://repo/.zencoder/rules/repo.md",
                    "mimeType": "text/markdown",
                    "content": "# Defense Solutions Web Application Information\n\n## Summary\nA modern web application for defense solutions built with React, Express, and TypeScript. The application features a client-side React frontend and a server-side Express backend, with Supabase integration for database operations.\n\n## Structure\n- `/client` - React frontend application with components, pages, and assets\n- `/server` - Express backend server with API routes and database integration\n- `/shared` - Shared types and database schemas using Drizzle ORM\n- `/api` - API route handlers for serverless deployment\n\n## Language & Runtime\n**Language**: TypeScript/JavaScript\n**Version**: TypeScript 5.6.3\n**Build System**: Vite 5.4.19\n**Package Manager**: pnpm (inferred from build commands)\n\n## Dependencies\n**Main Dependencies**:\n- React 18.3.1 - Frontend UI library\n- Express 4.21.2 - Backend server framework\n- Supabase - Backend as a service for database operations\n- Drizzle ORM - Database ORM with PostgreSQL support\n- TailwindCSS - Utility-first CSS framework\n- Wouter - Routing library for React\n- Tanstack Query - Data fetching library\n- Zod - Schema validation library\n\n**Development Dependencies**:\n- Vite - Build tool and development server\n- TypeScript - Static type checking\n- ESBuild - JavaScript bundler\n- Drizzle Kit - Database migration tools\n\n## Build & Installation\n```bash\n# Install dependencies\npnpm install\n\n# Development mode\npnpm dev\n\n# Production build\npnpm build\n\n# Start production server\npnpm start\n\n# Database schema push\npnpm db:push\n```\n\n## Database\n**Type**: PostgreSQL (via Supabase)\n**ORM**: Drizzle ORM\n**Schema**: Defined in `shared/schema.ts`\n**Tables**:\n- users - User authentication\n- contact_submissions - Contact form submissions\n\n## Deployment\n**Platform**: Vercel (configured via vercel.json)\n**Build Command**: `pnpm build`\n**Output Directory**: `dist/public`\n**Environment Variables**:\n- PORT - Server port (default: 3000)\n- DATABASE_URL - PostgreSQL connection string\n- SUPABASE_URL - Supabase project URL\n- SUPABASE_ANON_KEY - Supabase anonymous key\n\n## Client Application\n**Framework**: React with TypeScript\n**Routing**: Wouter\n**State Management**: React Query\n**UI Components**: Custom components with Radix UI primitives\n**Styling**: TailwindCSS with SCSS\n**Entry Point**: `client/src/main.tsx`\n\n## Server Application\n**Framework**: Express\n**API Routes**: RESTful endpoints in `/api` directory\n**Database Access**: Supabase client\n**Entry Point**: `server/index.ts`\n**Static Serving**: Production build serves static files from `dist/public`",
                    "alwaysApply": true
                }
            ]
        },
        {
            "id": "4676794d-d5bd-428c-8e15-1a0dce744ea9",
            "role": "assistant",
            "content": [
                {
                    "type": "text",
                    "text": "I can see you're getting a TypeScript error \"TS2304: Cannot find name Divider\" in your Solutions.tsx file. Let me search for where `Divider` is being used in the file to understand the issue better."
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_01Ki5YqghZ8HCZn9woyEthR2",
                    "title": "Fulltext search",
                    "statusText": "Done",
                    "status": "SUCCESS",
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "Now let me see the full context around line 647 to understand how `Divider` is being used:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_017xCRi4nXfy3PbxfVfZrGqC",
                    "statusText": "Viewed file (lines 630:669)",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/Solutions.tsx",
                                "fsPath": "/Users/samanyu/Desktop/TRINETHRA-DEFENTECH-v3/client/src/pages/Solutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "text",
                    "text": "I can see that `Divider` is being used on line 647, but it's not imported. Looking at the imports at the top of the file, I can see that `Separator` is imported from the UI components. The `Divider` component is likely meant to be `Separator` based on the UI library being used (which appears to be shadcn/ui based on the import pattern).\n\nLet me fix this by replacing `Divider` with `Separator`:"
                },
                {
                    "type": "toolCall",
                    "toolCallId": "toolu_0124SSDgANvHBoWAi8av3Z5M",
                    "statusText": "Change generated",
                    "status": "SUCCESS",
                    "context": {
                        "files": [
                            {
                                "path": "client/src/pages/Solutions.tsx",
                                "fsPath": "/Users/samanyu/Desktop/TRINETHRA-DEFENTECH-v3/client/src/pages/Solutions.tsx"
                            }
                        ]
                    },
                    "isHidden": false
                },
                {
                    "type": "codeHunk",
                    "lineBasedDiff": "--- /Users/samanyu/Desktop/TRINETHRA-DEFENTECH-v3/client/src/pages/Solutions.tsx\n+++ /Users/samanyu/Desktop/TRINETHRA-DEFENTECH-v3/client/src/pages/Solutions.tsx\n@@ -644,7 +644,7 @@\n                                     </motion.p>\n                                 </div>\n \n-                                <Divider />\n+                                <Separator />\n \n                                 <Section id=\"features\" title=\"Key Features\">\n                                     <ul className=\"space-y-3 mb-8 text-charcoal/80\">",
                    "refToolCallId": "toolu_0124SSDgANvHBoWAi8av3Z5M"
                },
                {
                    "type": "text",
                    "text": "Perfect! I've fixed the TypeScript error by replacing `Divider` with `Separator` on line 647. The `Separator` component is already properly imported from `@/components/ui/separator` at the top of the file, so this should resolve the \"Cannot find name Divider\" error.\n\nThe change makes sense because:\n1. `Separator` is already imported from the UI components library\n2. `Divider` was not imported and doesn't exist in the codebase\n3. Both components serve the same purpose - creating a visual separator between sections\n\nThe TypeScript error should now be resolved!"
                },
                {
                    "type": "codePatch",
                    "diffs": [
                        {
                            "path": "client/src/pages/Solutions.tsx",
                            "fsPath": "/Users/samanyu/Desktop/TRINETHRA-DEFENTECH-v3/client/src/pages/Solutions.tsx",
                            "patch": "@@ -32881,14 +32881,16 @@\n    %3C\n-Divide\n+Separato\n r /%3E\n",
                            "isNew": false,
                            "isApplied": true,
                            "timestamp": 1758696063052
                        }
                    ]
                }
            ],
            "context": {
                "author": "Code agent",
                "operationId": "bb846c01-28d8-42a0-9c8b-2f95f1c7c52f",
                "usageStatistics": {
                    "llmCallsUsedForAnswer": 4.0,
                    "llmCallsUsedTotal": 4.0,
                    "llmCallsLimit": 25.0,
                    "limitRenewalMillisecondTimestamp": 1758782433217
                }
            },
            "createdAt": 1758696035649,
            "isInternal": false
        }
    ],
    "isAgent": true,
    "isNameGenerated": true,
    "isCustomAgent": false,
    "isUnitTestsAgent": false,
    "isE2EAgent": false,
    "isWebDevAgent": false,
    "isQnaAgent": false,
    "isRepoInfoAgent": false,
    "autoApply": false,
    "model": "sonnet-4"
}
}